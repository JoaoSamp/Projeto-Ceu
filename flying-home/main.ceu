#include "c.ceu"
#include "sdl/sdl.ceu"

var SDL_Color bg = val SDL_Color(0x00,0x00,0x00,0xFF);

code/await Animation (var int w, var int h, var int fps, var& SDL_Rect charRect, var& _SDL_Renderer ren, var& SDL_Open_Image img ) -> none
do
    var SDL_Rect frame = val SDL_Rect(0, 0, w, h);
    par do
        every (1000/fps)ms do
            frame.x = frame.x + w;
            if frame.x >= img.tex.width then
                frame.x = 0;
                frame.y = frame.y + h;
                if frame.y >= img.tex.height then
                    frame.y = 0;
                end
            end
        end
    with
        every SDL_REDRAW do
            _SDL_RenderCopy(&&ren, &&img.tex.tex, &&frame as _SDL_Rect&&, &&charRect as _SDL_Rect&&);
        end
    end
end

code/await State(var real horiz_speed, var real vert_speed, var& SDL_Rect char_rect, var& _SDL_Renderer ren, var& SDL_Open_Image img) -> none
do
    par do
        spawn Animation (32, 32, 8, &char_rect, &ren, &img);
        await FOREVER;
    with    
        var int dt;
        every dt in SDL_DT do
            var real x_speed = ((horiz_speed * dt)/1000);
            var real y_speed = ((vert_speed * dt)/1000);
            char_rect.x = char_rect.x + (x_speed as int);
            char_rect.y = char_rect.y + (y_speed as int);
        end
    end
end

code/await Character (var int x, var int y, var int w, var int h, var& _SDL_Renderer ren) -> none
do
    var& SDL_Open_Image img_backward =
        spawn SDL_Open_Image(&ren, "assets/img/char/walker-backward.png");
    var& SDL_Open_Image img_dead =
        spawn SDL_Open_Image(&ren, "assets/img/char/walker-dead.png");
    var& SDL_Open_Image img_dive =
        spawn SDL_Open_Image(&ren, "assets/img/char/walker-dive.png");
    var& SDL_Open_Image img_flying =
        spawn SDL_Open_Image(&ren, "assets/img/char/walker-fly.png");
    var& SDL_Open_Image img_foward =
        spawn SDL_Open_Image(&ren, "assets/img/char/walker-foward.png");
    var& SDL_Open_Image img_glide =
        spawn SDL_Open_Image(&ren, "assets/img/char/walker-glide.png");

    var SDL_Rect char_rect = val SDL_Rect(x, y, w, h);
    var real flying_speed = 100;
    var real moving_speed = 100;
    var real normal_speed = 50;
    var real gravity = 50;

    loop do
        var int next = do
            spawn State(moving_speed, gravity, &char_rect, &ren, &img_glide);
            await SDL_KEYDOWN;
            escape 1;
        end;
        if next == 1 then
            next = do 
                spawn State(moving_speed, -flying_speed, &char_rect, &ren, &img_flying);
                await SDL_KEYUP;
                escape 0;
            end;
        end
    end

end

var&? SDL_Init sdl = spawn SDL_Init("Animation Test", 640,480, bg);
watching sdl do
    spawn Character (100, 100, 64, 64, &sdl.ren);
    await FOREVER;
end

escape 0;