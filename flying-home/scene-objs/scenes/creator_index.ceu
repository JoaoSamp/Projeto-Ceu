code/await New_Tile (var int index, var IVector tile_position, var& IMap imap) -> none
do
    var&? Tile tile;
    if imap.tile_map[index] == 2 then
        var ITile.IRing ring = call Create_Ring(tile_position, imap.speed);
        tile = spawn/dynamic Tile(&ring) in imap.all_tiles;
    else/if imap.tile_map[index] == 3 then
        var ITile.IPoison_Cloud p_cloud = call Create_Poison_Cloud(tile_position, imap.speed);
        tile = spawn/dynamic Tile(&p_cloud) in imap.all_tiles;
    else
        var ITile.ICloud cloud = call Create_Cloud(tile_position, imap.speed);
        tile = spawn/dynamic Tile(&cloud) in imap.all_tiles;
    end
    await tile;
end

code/await New_Actor( var int index, var IVector postion, var& IMap imap, var& IActor target) -> none
do
    var&? Actor actor;
    if index == 1 then
        var IActor.IVulture ivult = call Create_Vulture (postion, &imap, &target);
        actor = spawn/dynamic Actor (&ivult) in imap.all_actors;
    else/if index == 2 then
        var IActor.IDuck_Ranger iranger = call Create_Duck_Ranger (postion, &imap, &target);
        actor = spawn/dynamic Actor (&iranger) in imap.all_actors;
    else
        var IActor.IToxic_Quail itxc_quail = call Create_Toxic_Quail (postion, &imap, &target);
        actor = spawn/dynamic Actor (&itxc_quail) in imap.all_actors;
    end
    await actor;
end
