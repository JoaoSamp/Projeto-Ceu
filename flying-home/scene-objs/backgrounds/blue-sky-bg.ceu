code/await Blue_Sky_BG (none) -> NEVER
do
    // Create the background's quad 
    var IVector bg_size = val IVector (512, 288);
    var& SDL_Open_Image bg_img        = spawn SDL_Open_Image(&outer.renderer, "assets/img/background/sky.png");
    var IImage_Quad bg_iquad    = val IImage_Quad( &bg_img,     bg_size, _ );
    
    // Create a background data with quad(image) and speed 
    var IVector bg_speed = val IVector (-15, 0);
    var IBackground ibg_sky = call Create_Background( &bg_iquad, bg_speed);

    spawn Background_Image (ibg_sky);
    par do
        ibg_sky.scale.y = _abs(ibg_sky.scale.y);
    	ibg_sky.position.x = 0;
        loop do
            await Background_Image (ibg_sky);
            ibg_sky.scale.y = _abs(ibg_sky.scale.y) ;
            ibg_sky.position.x = bg_size.x * ibg_sky.scale.x;
        end
    with
        loop do
            ibg_sky.scale.y = _abs(ibg_sky.scale.y) * -1;
            ibg_sky.position.x = bg_size.x * ibg_sky.scale.x;
            await Background_Image (ibg_sky);
        end
    end
end