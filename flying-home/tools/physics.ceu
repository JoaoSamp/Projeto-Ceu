code/call Update_Physics (var& IActor iactor, var int dt) -> none
do
    var& IMap imap = &iactor.imap;
	var& IMoving_Obj imov_obj = &iactor.imov_obj;
	var IVector camera_x_boundaries = val IVector (imov_obj.aabb.half_size.x, outer.camera_size.x - imov_obj.aabb.half_size.x);
	var IVector map_y_boundaries = val IVector (imap.position.y + imov_obj.aabb.half_size.y,
											  	imap.position.y + imap.size.y * imap.tile_size.y - imov_obj.aabb.half_size.y);

	imov_obj.speed.x = (imov_obj.speed.x + (imov_obj.acceleration.x * dt/1000)) * 0.9;
	if imov_obj.speed.x > imov_obj.max_speed.x then
		imov_obj.speed.x = imov_obj.max_speed.x;
	else/if imov_obj.speed.x < -imov_obj.max_speed.x then
		imov_obj.speed.x = -imov_obj.max_speed.x;
	end

	if imov_obj.speed.y > imov_obj.max_speed.y then
		imov_obj.speed.y = imov_obj.max_speed.y;
	else/if imov_obj.speed.y < -imov_obj.max_speed.y then
		imov_obj.speed.y = -imov_obj.max_speed.y;
	end

	imov_obj.speed.y = (imov_obj.speed.y + (imov_obj.acceleration.y * dt/1000)) * 0.9;
    var real speed_x = imov_obj.speed.x * dt/1000;
    var real speed_y = imov_obj.speed.y * dt/1000;

    imov_obj.old_position = imov_obj.position;
    imov_obj.position.x = (imov_obj.position.x + speed_x);
    imov_obj.position.y = (imov_obj.position.y + speed_y);

    if imov_obj.bound_top and (imov_obj.position.y  < map_y_boundaries.x) then
    	imov_obj.position.y = map_y_boundaries.x;
    	imov_obj.speed.y = 0;
    end
	if imov_obj.bound_bottom and (imov_obj.position.y > map_y_boundaries.y) then
		imov_obj.position.y = map_y_boundaries.y;
		imov_obj.speed.y = 0;
	end
    if imov_obj.bound_left or imov_obj.bound_right then
	    if (imov_obj.old_position.x >= camera_x_boundaries.x) and (imov_obj.old_position.x <= camera_x_boundaries.y) then
		    if imov_obj.bound_left and (imov_obj.position.x < camera_x_boundaries.x) then
		    	imov_obj.position.x = camera_x_boundaries.x;
	    		imov_obj.speed.x = 0;
		    else/if imov_obj.bound_right and (imov_obj.position.x > camera_x_boundaries.y) then
		    	imov_obj.position.x = camera_x_boundaries.y;
	    		imov_obj.speed.x = 0;
		    end
	    end
	end

    imov_obj.aabb.center = imov_obj.position;
end