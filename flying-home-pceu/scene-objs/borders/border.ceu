data IBorder with
	var IImage_Quad iquad;
    var IMoving_Obj imov_obj;
    var IVector relative_velocity;
end

code/call Create_Border (var IImage_Quad iquad, var IMoving_Obj imov_obj, var IVector relative_velocity) -> IBorder
do
	var IBorder iborder = val IBorder(iquad, imov_obj, relative_velocity);
	escape iborder;
end

code/await Border (var& IBorder iborder) -> NEVER
do
    var IVector draw_position               = val IVector (0,0);
    var IVector camera_bounds_x             = call Camera_Get_Boundaries_X();
    iborder.imov_obj.ikinematic.position.x  = camera_bounds_x.x;
    par do
        every FRAMES_REDRAW do

            emit GRAPHICS_SET_BMP_FRAME ( iborder.iquad.draw_frame, iborder.iquad.frames );

            var IVector camera_size = call Camera_Get_Size();
            var IVector border_size = call AABB_Get_Size(&iborder.imov_obj.iaabb);
            draw_position           = iborder.imov_obj.iaabb.center;

            var int i;
            loop i in [0 -> ((camera_size.x / border_size.x) + 1) as int] do
                draw_position.x = (i * border_size.x ) + iborder.imov_obj.iaabb.center.x - i;
                call Draw_Image( &iborder.iquad, draw_position.x, draw_position.y, iborder.imov_obj.iaabb.scale.x, iborder.imov_obj.iaabb.scale.y, iborder.iquad.offset.x, iborder.iquad.offset.y, iborder.imov_obj.iaabb.rotate_angle);
            end
        end
    with
        var int dt;
        every dt in FRAMES_UPDATE do
			iborder.imov_obj.ikinematic.velocity = call VAdd(call Camera_Get_Velocity(), iborder.relative_velocity);
            call Kinematic_Update_Position ( &iborder.imov_obj.ikinematic, dt );

            var IVector border_position = iborder.imov_obj.ikinematic.position;
            var IVector border_size     = call AABB_Get_Size(&iborder.imov_obj.iaabb);
            var IVector camera_bounds_x = call Camera_Get_Boundaries_X();

            if border_position.x < camera_bounds_x.x - border_size.x then
                border_position.x                       = border_position.x + border_size.x;
                iborder.imov_obj.ikinematic.position    = border_position;
            end
            iborder.imov_obj.iaabb.center           = iborder.imov_obj.ikinematic.position;
        end
    end
end
