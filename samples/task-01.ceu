// Move rectangle

#include "c.ceu"
#include "sdl/sdl.ceu"

var SDL_Color bg = val SDL_Color(0x00,0x00,0x00,0xFF);
var SDL_Rect rect = val SDL_Rect(100,100,20,50);
var int velX = 0;
var int velY = 0;
var int vel = 2;

var&? SDL_Init sdl = spawn SDL_Init("SDL 4", 800,480, bg);
watching sdl do
    loop do
        par/or do
		loop do
			var _SDL_KeyboardEvent&& key = await SDL_KEYDOWN;
			if key:keysym.sym == _SDLK_w  then
        	    		velY = -1;
			else/if key:keysym.sym == _SDLK_s then
				velY = 1;
			else/if key:keysym.sym == _SDLK_d then
				velX = 1;
			else/if key:keysym.sym == _SDLK_a then
				velX = -1;
			else/if key:keysym.sym == _SDLK_UP then
				vel = vel-1;
			else/if key:keysym.sym == _SDLK_DOWN then
				vel = vel+1;
			end
		end
	with
		loop do
			var _SDL_KeyboardEvent&& key = await SDL_KEYUP;
			if key:keysym.sym == _SDLK_w and velY < 0 then
                                velY = 0;
                        else/if key:keysym.sym == _SDLK_s and velY > 0 then
                                velY = 0;
                        else/if key:keysym.sym == _SDLK_d and velX > 0 then
                                velX = 0;
                        else/if key:keysym.sym == _SDLK_a and velX < 0 then
                                velX = 0;			
			end
		end
	with
		loop do
			every (vel)ms do
				rect.x = rect.x + velX;
				rect.y = rect.y + velY;
			end
		end
	with 
		every SDL_REDRAW do
			_SDL_SetRenderDrawColor(&&sdl.ren, 0x2D, 0x51, 0x71, 0xFF);
			_SDL_RenderFillRect(&&sdl.ren, &&rect as _SDL_Rect&&);
		end
        end
    end
end


escape 0;
